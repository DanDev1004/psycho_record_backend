CREATE TABLE ROL(
	ID_ROL INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE_ROL VARCHAR(50) NOT NULL UNIQUE, -- no permitir cadenas vacias
	ESTADO BIT DEFAULT 1
);

CREATE TABLE RELIGION(
	ID_RELIGION INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE_RELIGION VARCHAR(70) NOT NULL UNIQUE, -- no permitir cadenas vacias
    ESTADO BIT DEFAULT 1
);

CREATE TABLE ESTADO_CIVIL(
	ID_EC INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE_EC VARCHAR(70) NOT NULL UNIQUE,-- no permitir cadenas vacias
    ESTADO BIT DEFAULT 1
);

CREATE TABLE PARENTESCO(
	ID_PARENTESCO INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE_PARENTESCO VARCHAR(70) NOT NULL UNIQUE, -- no permitir cadenas vacias
    ESTADO BIT DEFAULT 1
);

CREATE TABLE AREA_PE(
	ID_AREA_PE INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE_AREA_PE VARCHAR(70) NOT NULL UNIQUE, -- no permitir cadenas vacias
    ESTADO BIT DEFAULT 1
);

##################################################

CREATE TABLE USUARIO(
	ID_USUARIO INT AUTO_INCREMENT PRIMARY KEY,
    DNI_USUARIO CHAR(8) NOT NULL UNIQUE, 
    NOMBRE_USUARIO VARCHAR(70) NOT NULL, -- no permitir cadenas vacias
    APELLIDO_USUARIO VARCHAR(70) NOT NULL, -- no permitir cadenas vacias
    USERNAME VARCHAR(30) NOT NULL, -- no permitir cadenas vacias
    EMAIL VARCHAR(70) NOT NULL, -- no permitir cadenas vacias
    PASSWORD_USER VARCHAR(70) NOT NULL,-- no permitir cadenas vacias
    ID_ROL INT NOT NULL,
    ESTADO BIT DEFAULT 1,
    FOREIGN KEY(ID_ROL) REFERENCES ROL(ID_ROL)
);

CREATE TABLE PERSONA(
	ID_PERSONA INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRES VARCHAR(70) NOT NULL, -- no permitir cadenas vacias
    APELLIDOS VARCHAR(70) NOT NULL, -- no permitir cadenas vacias
    DNI CHAR(8) NOT NULL UNIQUE, -- no permitir cadenas vacias
    SEXO CHAR(1) NOT NULL, -- solo permititr 'M' o 'F' con IsIn de sequelize
    TELEFONO CHAR(9) NULL,
    ID_EC INT NULL,
    ID_RELIGION INT NULL,
    DIR_NAC TEXT NULL,
    FECH_NAC DATE NULL,
    DOMICILIO TEXT NULL,
    ESTADO BIT DEFAULT 1,
    FOREIGN KEY(ID_RELIGION) REFERENCES RELIGION(ID_RELIGION),
    FOREIGN KEY(ID_EC) REFERENCES ESTADO_CIVIL(ID_EC)
);

CREATE TABLE PARIENTE(
	ID_PARIENTE INT AUTO_INCREMENT PRIMARY KEY,
    ID_PERSONA INT NOT NULL,
    ID_PARENTESCO INT NOT NULL,
    ESTADO BIT DEFAULT 1,
    FOREIGN KEY(ID_PERSONA) REFERENCES PERSONA(ID_PERSONA),
    FOREIGN KEY(ID_PARENTESCO) REFERENCES PARENTESCO(ID_PARENTESCO)
);

CREATE TABLE ALUMNO(
	ID_ALUMNO INT AUTO_INCREMENT PRIMARY KEY,
    COD_ALUMNO CHAR(9) NOT NULL UNIQUE,
    ID_PERSONA INT NOT NULL,
    ESTADO BIT DEFAULT 1,
    FOREIGN KEY(ID_PERSONA) REFERENCES PERSONA(ID_PERSONA)
);

CREATE TABLE DOCENTE(
	ID_DOCENTE INT AUTO_INCREMENT PRIMARY KEY,
    COD_DOCENTE CHAR(9) NOT NULL UNIQUE,
    ID_PERSONA INT NOT NULL,
	ID_AREA_PE INT NULL,
    ESTADO BIT DEFAULT 1,
    FOREIGN KEY(ID_AREA_PE) REFERENCES AREA_PE(ID_AREA_PE)
);

CREATE TABLE AULA(
	ID_AULA INT AUTO_INCREMENT PRIMARY KEY,
    ANIO INTEGER NOT NULL, -- no permitir valores vacios y con len[4,4] ya que sequelize no tiene un dato de tipo year
	PERIODO SMALLINT NOT NULL, -- isIn: [[1,2]]
    CICLO SMALLINT NOT NULL, -- isIn: [[1,2,3,4,5,6]]
    ESTADO BIT DEFAULT 1
);


#############################################
CREATE TABLE FAMILIAR(
	ID_FAMILIAR INT AUTO_INCREMENT PRIMARY KEY,
    ID_PARIENTE INT NOT NULL,
    ID_ALUMNO INT NOT NULL,
    ESTADO BIT DEFAULT 1,
    FOREIGN KEY(ID_PARIENTE) REFERENCES PARIENTE(ID_PARIENTE),
    FOREIGN KEY(ID_ALUMNO) REFERENCES ALUMNO(ID_ALUMNO)
);

CREATE TABLE TUTOR(
	ID_TUTOR INT AUTO_INCREMENT PRIMARY KEY,
    ID_DOCENTE INT NOT NULL,
    ID_AULA INT NOT NULL,
    FECHA_INICIO DATE NOT NULL,
    FECHA_FIN DATE NOT NULL,
    ESTADO BIT DEFAULT 1,
    FOREIGN KEY(ID_DOCENTE) REFERENCES DOCENTE(ID_DOCENTE),
    FOREIGN KEY(ID_AULA) REFERENCES AULA(ID_AULA)
);

CREATE TABLE LISTADO_AULA(
	ID_LISTA_AULA INT AUTO_INCREMENT PRIMARY KEY,
    ID_ALUMNO INT NOT NULL,
    ID_AULA INT NOT NULL,
    ESTADO BIT DEFAULT 1,
    FOREIGN KEY(ID_ALUMNO) REFERENCES ALUMNO(ID_ALUMNO),
    FOREIGN KEY(ID_AULA) REFERENCES AULA(ID_AULA)
);

############################################
CREATE TABLE DERIVACION(
	ID_DERIVACION INT AUTO_INCREMENT PRIMARY KEY,
    ID_USUARIO INT NOT NULL,
    ID_TUTOR INT NOT NULL,
    ID_ALUMNO INT NOT NULL,
    MOTIVO TEXT NOT NULL,
    URGENCIA SMALLINT NOT NULL, -- isIn: [[1,2,3]]
    ESTADO BIT DEFAULT 1,
    FOREIGN KEY(ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
    FOREIGN KEY(ID_TUTOR) REFERENCES TUTOR(ID_TUTOR),
    FOREIGN KEY(ID_ALUMNO) REFERENCES ALUMNO(ID_ALUMNO)
);

CREATE TABLE CONSULTA_PS(
	ID_CONSULTA_PS INT AUTO_INCREMENT PRIMARY KEY,
    ID_USUARIO INT NOT NULL,
    TIPO_DERIVACION SMALLINT NOT NULL,  -- isIn: [[1,2,3]]
    ID_ALUMNO INT NULL,
    ID_DERIVACION INT NULL,
    ID_FAMILIAR INT NULL,
    FECHA_ATENCION DATE NOT NULL,
    HORA_INICIO TIME NOT NULL,
    HORA_FIN TIME NOT NULL,
    ASISTENCIA SMALLINT NOT NULL, -- isIn: [[1,2,3]]
    MOTIVO TEXT NULL,
    PROBLEMA TEXT NULL,
    RECOMENDACION TEXT NULL,
    ASPECTO_FISICO TEXT NULL,
    ASEO_PERSONAL TEXT NULL,
    CONDUCTA TEXT NULL,
    ESTADO BIT DEFAULT 1,
    FOREIGN KEY(ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
    FOREIGN KEY(ID_DERIVACION) REFERENCES DERIVACION(ID_DERIVACION),
    FOREIGN KEY(ID_ALUMNO) REFERENCES ALUMNO(ID_ALUMNO),
    FOREIGN KEY(ID_FAMILIAR) REFERENCES FAMILIAR(ID_FAMILIAR)
);

###########################
CREATE TABLE CAT_COND(
	ID_CAT_COND INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE_CAT_COND VARCHAR(255) NOT NULL UNIQUE,
    ESTADO BIT DEFAULT 1
);

CREATE TABLE CONDICION(
	ID_CONDICION INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE_CONDICION VARCHAR(255) NOT NULL UNIQUE,
    ID_CAT_COND INT NOT NULL,
    ESTADO BIT DEFAULT 1,
    FOREIGN KEY(ID_CAT_COND) REFERENCES CAT_COND(ID_CAT_COND)
);

CREATE TABLE DIAGNOSTICO(
	ID_DIAGNOSTICO INT AUTO_INCREMENT PRIMARY KEY,
    ID_CONSULTA_PS INT NOT NULL,
    ID_CONDICION INT NULL,
    DESCRIPCION TEXT NULL,
    ESTADO BIT DEFAULT 1,
    FOREIGN KEY(ID_CONDICION) REFERENCES CONDICION(ID_CONDICION)
);